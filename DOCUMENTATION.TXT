[PROJECT STRUCTURE]
    data_meta
        metadata_history.cfg is a results history
    data_search
        search.cfg is a list of user-configured searches as well as progress/status
    extra
        # TODO, has no content
    media
        # TODO, has no content
    network
        # TODO, has no content
    qbit_interface
        api_comm.py is the interface to the api
    user_configuration
        EDIT_SETTINGS_HERE.cfg is global settings, currently RO
        settings_io.py is parser interactions
        settings_wrapper.py is an experimental class hierarchy to the parser
    .gitignore is self-explanatory
    DOCUMENTATION.TXT is YOU ARE HERE
    LICENSE is self-explanatory
    main_loop.py is the entire application abstracted to a few commands
    README.md is self-explanatory
    state_machine.py is the search state machine
    state_machine_interface.py handles translation between parsers and state machine
	..the interface also helps to keep the state machine simple and easy to debug
    TODO.txt is my project notes and a good place to start when looking for work

[STATE MACHINE NOTES]
    all search states
        queued, running, stopped, concluded
            queued and concluded are user-defined, running and stopped are api-defined

    states and transitions
        1. queued
            when to go to 2? start_search -> search_status = RUNNING
            when to go to 3? never
            when to go to 4? never
        2. running
            when to go to 1? if bad data, reset to 1
            when to go to 3? search_status = STOPPED
            when to go to 4? never
        3. stopped
            when to go to 1? if bad results or no results, reset to 1
            when to go to 2? never
            when to go to 4? if exceed user thresholds
        4. concluded
            once entered, never exit
